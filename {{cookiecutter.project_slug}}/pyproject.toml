[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.short_description }}"
authors = ["{{ cookiecutter.full_name }} <{{ cookiecutter.email }}>"]
readme = "README.md"
homepage = "https://github.com/{{ cookiecutter.github_name }}/{{ cookiecutter.project_slug }}"
repository = "https://github.com/{{ cookiecutter.github_name }}/{{ cookiecutter.project_slug }}"
documentation = "https://{{ cookiecutter.github_name }}.github.io/{{ cookiecutter.project_slug }}/"
classifiers = [
    "Typing :: Typed",
    "Private :: Do Not Upload",
]
packages = [
    { include = "{{ cookiecutter.module_name }}", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.9"

[tool.poetry.dev-dependencies]
nox-poetry = "*"

# Testing.
pytest = "*"
pytest-cov = "*"

# Type Checking.
mypy = "*"

# Linting.
flake8 = "*"
flake8-bugbear = "*"
flake8-broken-line = "*"
flake8-comprehensions = "*"
pep8-naming = "*"
pyproject-flake8 = "*"

# Formatting.
black = "*"
isort = "*"

# Pre-commit.
pre-commit = "*"

# Documentation.
mkdocs-material = "*"
mkdocs-htmlproofer-plugin = "*"
mkdocstrings = { version = "*", extras = ["python"] }
## Autodoc.
mkdocs-gen-files = "*"
mkdocs-literate-nav = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
show_error_codes = true
ignore_missing_imports = true
strict = true

[tool.flake8]
# Use the more relaxed max line length permitted in PEP 8.
max-line-length = 99
# This ignore is required by black.
extend-ignore = ["E203"]
per-file-ignores = ["__init__.py:F401"]

[tool.black]
line-length = 99
target-version = ["py39", "py310"]
# black will automatically exclude all files listed in .gitignore
# If you need to exclude additional folders, consider using extend-exclude to avoid disabling the
# default .gitignore behaviour.

[tool.isort]
profile = "black"
line_length = 99
force_sort_within_sections = true
# Inform isort of paths to import names that should be considered part of the "First Party" group.
src_paths = ["src/{{ cookiecutter.module_name }}"]
skip_gitignore = true
# If you need to skip/exclude folders, consider using skip_glob as that will allow the
# isort defaults for skip to remain without the need to duplicate them.

[tool.pytest.ini_options]
filterwarnings = [
    "error",
]

[tool.coverage.run]
branch = true
